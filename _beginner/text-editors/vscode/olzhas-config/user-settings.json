{
    "window.title": "${activeEditorShort}${separator}${folderPath}",
    "window.zoomLevel": 0,

    "editor.minimap.enabled": false,
    "editor.scrollBeyondLastLine": false,
    "editor.fontSize": 14,
    "editor.tabSize": 2,
    "editor.quickSuggestions": { // Controls if quick suggestions should show up while typing
        "other": true,
        "comments": false,
        "strings": false
    },
    "editor.acceptSuggestionOnEnter": "smart", // Controls if suggestions should be accepted with "Enter" - in addition to "Tab". Helps to avoid ambiguity between inserting new lines and accepting suggestions.
    "editor.quickSuggestionsDelay": 10, // Controls the delay in ms after which quick suggestions will show up.
    "editor.renderWhitespace": "boundary",
    "editor.cursorBlinking": "phase",
    "editor.snippetSuggestions": "top",

    // "editor.formatOnPaste": true,
    // "editor.formatOnSave": true,

    "files.autoSave": "off",
    // "files.autoSave": "afterDelay",
    // "files.autoSaveDelay": 1000,
    "files.insertFinalNewline": true,

    "explorer.autoReveal": false,
    "explorer.confirmDelete": false,
    "explorer.confirmDragAndDrop": false,

    "zenMode.hideTabs": false,

    // ВЫ МОЖЕТЕ УСТАНОВИТЬ GMC ТЕМУ И ИСПОЛЬЗОВАТЬ СЛЕДУЮЩИЕ ДВЕ СТРОКИ
    // "materialTheme.fixIconsRunning": false,
    // "workbench.iconTheme": "eq-material-theme-icons-palenight",
    
    "workbench.iconTheme": "vs-seti",
    "workbench.statusBar.visible": true,
    "workbench.activityBar.visible": true,
    "workbench.editor.labelFormat": "short",
    // "workbench.editor.showIcons": false,
    // "workbench.colorTheme": "Gantheory",
    // "workbench.colorCustomizations": {
    //     "editorIndentGuide.activeBackground": "#ff0000"
    // },
    "workbench.colorCustomizations": {
        "editorCursor.foreground": "#bdd3ec"
    },

    // prettier configs
    "[javascript]": {
        "editor.formatOnSave": true,
    },
    "[graphql]": {
        "editor.formatOnPaste": true,
        "editor.formatOnType": true,
        "editor.formatOnSave": true,
    },
    "[stylus]": {
        "editor.formatOnSave": true,
    },
    "[html]": {
        "editor.formatOnSave": false,
    },
    "[vue]": {
        "editor.formatOnSave": true
    },
    "prettier.trailingComma": "all",
    "prettier.semi": false,
    "prettier.disableLanguages": [],
    // ОСТОРОЖНО! МОЖЕТ СЛОМАТЬ АВТОФОРМАТИРОВАНИЕ!
    // "prettier.eslintIntegration": true,

    "languageStylus.useSeparator": false,
    "stylusSupremacy.alwaysUseZeroWithoutUnit": true,
    "stylusSupremacy.insertBraces": false,
    "stylusSupremacy.insertColons": true,
    "stylusSupremacy.insertLeadingZeroBeforeFraction": false,
    "stylusSupremacy.insertSemicolons": false,

    "npm.enableScriptExplorer": false,
    
    "git.autofetch": true,
    "git.enableSmartCommit": true,

    "gitlens.historyExplorer.enabled": true,
    "gitlens.advanced.messages": {
        "suppressCommitHasNoPreviousCommitWarning": false,
        "suppressCommitNotFoundWarning": false,
        "suppressFileNotUnderSourceControlWarning": false,
        "suppressGitVersionWarning": false,
        "suppressLineUncommittedWarning": false,
        "suppressNoRepositoryWarning": false,
        "suppressResultsExplorerNotice": true,
        "suppressShowKeyBindingsNotice": true
    },
    "gitlens.codeLens.enabled": false,
    "gitlens.hovers.enabled": false,
    "gitlens.blame.avatars": false,
    "gitlens.statusBar.enabled": false,
    "gitlens.explorers.avatars": false,
    "gitlens.currentLine.enabled": false,
    "gitlens.hovers.currentLine.over": "line",

    "todo-tree.ripgrep": "/Applications/Visual Studio Code.app/Contents/Resources/app/node_modules.asar.unpacked/vscode-ripgrep/bin/rg",
    "todo-tree.showInExplorer": false,
    "todo-tree.regex": "((//| |#|<!--|;|/\\*)\\s*($TAGS)|^\\s*- \\[ \\])",
    "todo-tree.flat": true,
    "todo-tree.tags": [
        "TODO",
        "FIXME",
        "@todo"
    ],

    "doiuse.browsers": ["> 1%", "last 2 versions", "IE > 10"],
    "doiuse.enable": true, // Control whether doiuse is enabled for styles files or not.
    "doiuse.ignore": [], // An optional array of features to ignore.
    "doiuse.ignoreFiles": [], // An optional array of file globs to match against original source file path, to ignore.
    "doiuse.messageLevel": "Information", // Represents a diagnostic level, such as a Information, Warning or Error.
    "doiuse.run": "onType",

    "markdownlint.config": {
        "MD024": false, // no-duplicate-header
    },
}
